如何设计微服务
1. 服务拆分(横向拆分、纵向拆分)
2. 服务注册
3. 服务发现
4. 服务消费
5. 统一入口
6. 配置管理
7. 熔断机制
8. 自动扩展

collection-eureka-feign 缓存redis
data-eureka	查询redis,redis没有的话直接抛出异常
report-eureka-feign	前端展现
city-eureka	从xml获取城市列表

eureka-server 其他的微服務作为eureka client

指定端口启动springboot的jar
java -jar xxxx.jar --server.port=8081

服务注册与发现
Eureka Server
Eureka Client

@EnableDiscoveryClient

微服务-常见消费者
1. Apache HttpClient(可以使用RestTemplate)
2. Ribbon(实现客户端负载均衡)
	a. maven中需要添加依赖
3. Feign
	a. maven中需要添加依赖
	b. springboot启动类使用
		@EnableDiscoveryClient
		@EnableFeignClients
	c. service的接口中使用
		类注解@FeignClient("mas-weather-city-eureka")<-要被消费的应用名称
		方法注解@GetMapping("/cities")
		
如何集成Zuul
1. 导入maven依赖
2. 主类上添加 @EnbleZuulProxy
3. 修改application.properties
	zuul.routes.hi.path=/hi/**
	zuul.routes.hi.serviceId=应用名称
-----------------配置集中化,可以读取github上保存的公共配置文件-----------------
创建配置中心服务端
1. 导入maven依赖 spring-cloud-config-server
2. 启动类添加 @EnableConfigServer
3. application.properties中添加
	#github上的一个仓库连接
	spring.cloud.config.server.git.uri=xxxxxxxxxxxxxxxxxxxx
	#仓库下面的一个文件夹名称
	spring.cloud.config.server.git.searchPaths=xxxxxxxxxxxxxxxxx
创建配置中心客户端
1. 导入maven依赖spring-cloud-config-client
2. application.properties中添加
	spring.cloud.config.profile=dev
	spring.cloud.config.uri=xxxxxxxxxxxxxxx
